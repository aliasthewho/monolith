plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/*Controller.class'
					, '**/*Application.class'
					, '**/*$*.class' // inner classes generated by lombok
			])
		}))
	}
}
//
//test {
//	finalizedBy jacocoTestReport
//}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation 'org.mockito:mockito-core'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy('jacocoTestReport')
}
